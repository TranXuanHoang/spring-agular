# Set custom username and password for easier to remember.
# Deleting the following two lines of setup will make Spring
# print out the automatically generated password to the console
# and the username will be 'user'
spring.security.user.password=asdf1234
spring.security.user.name=hoang

spring.resources.chain.cache=false


# Spring Boot Configuration
# Spring Boot applies configuration that is equivalent to manually
# adding @EnableRedisHttpSession annotation. This creates a Spring bean
# with the name of springSessionRepositoryFilter that implements Filter.
# The filter is in charge of replacing the HttpSession implementation
# to be backed by Spring Session.
#spring.session.store-type=redis                # Session store type.
#server.servlet.session.timeout=                # Session timeout. If a duration suffix is not specified, seconds is used.
#spring.session.redis.flush-mode=on-save        # Sessions flush mode.
#spring.session.redis.namespace=spring:session  # Namespace for keys used to store sessions.


# Configuring the Redis Connection
# To work with Redis on Windows, see https://www.memurai.com/
#     Example of running memurai-cli to call Redis API's via redis-cli
#     C:\Program Files\Memurai>memurai-cli.exe --scan
#spring.redis.host=localhost      # Redis server host.
#spring.redis.password=secret     # Login password of the redis server.
#spring.redis.port=6379           # Redis server port.


# Actuator
# See https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*